{"version":3,"sources":["components/Tabs/TabContext.tsx","components/Tabs/Tabs.tsx","components/Tabs/TabContent.tsx","components/Tabs/TabListContext.tsx","components/Tabs/TabList.tsx","components/Tabs/Tab.tsx","components/Tabs/TabPane.tsx","components/Tabs/index.ts","components/Card.tsx","components/Label.tsx","components/LabelWrapper.tsx","components/TextArea.tsx","components/Button.tsx","contexts/FormConfigContext.tsx","hooks/useFormConfig.ts","constants.ts","helpers.ts","utils.ts","actions/formConfigActions.ts","components/Alert.tsx","reducers/formConfigReducer.ts","components/ConfigForm.tsx","components/Field.tsx","components/CommonField.tsx","components/FormItemsViewer.tsx","components/FormControlsViewer.tsx","components/ResultForm.tsx","data.ts","components/FormTemplates.tsx","components/App.tsx","index.tsx"],"names":["TabsContext","createContext","activeIndex","setActiveIndex","Tabs","children","controlledActiveIndex","onSetActiveIndex","useState","Provider","value","TabContent","useContext","Array","isArray","TabListContext","index","TabListBlock","styled","div","TabList","Children","map","child","key","TabBlock","Tab","isActive","className","onClick","TabPane","Card","Label","label","LabelWrapper","id","position","htmlFor","TextAreaBlock","TextArea","props","Button","button","variant","size","defaultProps","FormConfigContext","undefined","FormConfigProvider","reducer","initialState","useReducer","state","dispatch","useFormConfig","FIELD_INPUT_TYPES","getFieldWrongTypeMsg","type","validateFormData","data","configData","errors","JSON","parse","e","forEach","hasOwnProperty","push","getRequiredFieldMsg","title","length","updateFormConfig","payload","validateFormConfig","Alert","initialData","items","controls","config","stringify","error","formConfigReducer","ContentRight","ConfigForm","onSubmit","data-testid","preventDefault","onReset","newData","name","onChange","target","onKeyDown","rows","disabled","FieldBlock","defaultOnChange","Field","CommonField","tagProps","includes","inputType","getInputType","FormItemsViewer","item","Fragment","Row","FormControlsViewer","ResultForm","signInFormData","placeholder","signUpFormData","createPostFormData","checked","FormTemplates","Container","App","activeTab","setActiveTab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAYeA,EALKC,wBAAqB,CACvCC,YAAa,EACbC,eAAgB,eCmBHC,EAnBS,SAAC,GAIlB,IAHLC,EAGI,EAHJA,SACaC,EAET,EAFJJ,YACAK,EACI,EADJA,iBACI,EACkCC,mBAAS,GAD3C,mBACGN,EADH,KACgBC,EADhB,KAGJ,OACE,kBAAC,EAAYM,SAAb,CACEC,MAAO,CACLR,YAAW,OAAEI,QAAF,IAAEA,IAAyBJ,EACtCC,eAAc,OAAEI,QAAF,IAAEA,IAAoBJ,IAGtC,oCAAGE,KCNMM,EAVe,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SACvBH,EAAgBU,qBAAWZ,GAA3BE,YAER,OAAKW,MAAMC,QAAQT,GAIZ,6BAAMA,EAASH,IAHb,6BAAMG,ICHFU,EAFQd,wBAAqB,CAAEe,MAAO,I,sJCFrD,IAAMC,EAAeC,IAAOC,IAAV,KAsBHC,EAZY,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAC5B,OACE,kBAACY,EAAD,KACGI,WAASC,IAAIjB,GAAU,SAACkB,EAAOP,GAAR,OACtB,kBAAC,EAAeP,SAAhB,CAAyBC,MAAO,CAAEM,SAASQ,IAAKR,GAC7CO,Q,+PCdX,IAAME,EAAWP,IAAOC,IAAV,KA+BCO,EAfQ,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,EACCO,qBAAWZ,GAA3CE,EAD+B,EAC/BA,YAAaC,EADkB,EAClBA,eACba,EAAUJ,qBAAWG,GAArBC,MACFW,EAAWX,IAAUd,EAE3B,OACE,kBAACuB,EAAD,CACEG,UAAWD,EAAW,SAAW,GACjCE,QAAS,kBAAM1B,EAAea,KAE7BX,ICvBQyB,EAFY,SAAC,GAAD,IAAGzB,EAAH,EAAGA,SAAH,OAAkB,oCAAGA,ICEjCD,I,8ICNf,IAMe2B,EANFb,IAAOC,IAAV,K,gMCAV,IAQea,EARDd,IAAOe,MAAV,KCuBIC,EAbiB,SAAC,GAAD,IAC9BD,EAD8B,EAC9BA,MACAE,EAF8B,EAE9BA,GACA9B,EAH8B,EAG9BA,SAH8B,IAI9B+B,gBAJ8B,MAInB,SAJmB,SAM9B,oCACGH,GAAsB,WAAbG,GAAyB,kBAAC,EAAD,CAAOC,QAASF,GAAKF,GACvD5B,EACA4B,GAAsB,UAAbG,GAAwB,kBAAC,EAAD,CAAOC,QAASF,GAAKF,K,mfCjB3D,IAAMK,EAAgBpB,IAAOC,IAAV,KAoCJoB,EARa,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAOE,EAAV,EAAUA,GAAOK,EAAjB,qCAC1B,kBAACF,EAAD,KACE,kBAAC,EAAD,CAAcL,MAAOA,EAAOE,GAAIA,GAC9B,4CAAUA,GAAIA,GAAQK,O,inBCtB5B,IAAMC,EAAoBvB,IAAOwB,OAAV,KA4BnB,kBACY,YADZ,EAAGC,SACH,mJAYA,kBACY,YADZ,EAAGA,SACH,mJAYA,kBACS,UADT,EAAGC,MACH,8FAUJH,EAAOI,aAAe,CACpBF,QAAS,QACTC,KAAM,UAGOH,QClEFK,EAAoB7C,6BAC/B8C,GASWC,EAAqB,SAAC,GAIrB,IAHZC,EAGW,EAHXA,QACAC,EAEW,EAFXA,aACA7C,EACW,EADXA,SACW,EACe8C,qBAAWF,EAASC,GADnC,mBACJE,EADI,KACGC,EADH,KAGX,OACE,kBAACP,EAAkBrC,SAAnB,CACEC,MAAO,CAAE0C,QAAOC,YAChBhD,SAAUA,KClCHiD,EAAgB,kBAC3B1C,qBAAWkC,ICGAS,EAAoB,CAPA,SAGC,UAFD,SAGD,QACD,QCuBlBC,GDbW,UAAOD,EAAP,CAbO,SC0BK,SAAC/B,EAAaiC,GAAd,uBACxBjC,EADwB,qBACRiC,KC1BfC,EAAmB,SAACC,GAC/B,IAAIC,EAA+D,GAC/DC,EAA0B,KAE9B,IACED,EAAaE,KAAKC,MAAMJ,GACxB,MAAOK,GACPH,EAAS,CAAC,qBAGZ,GAAe,OAAXA,EACF,OAAOA,EAGTA,EAAS,GACT,IAU8D,GAVjD,CAAC,QAAS,YAElBI,SAAQ,SAACzC,GAC0B,IAAD,EAArC,GAAKoC,EAAWM,eAAe1C,IAExB,IAAKX,MAAMC,QAAS8C,EAAmBpC,IAAO,CAAC,IAAD,EAC7C,QAAN,EAAAqC,SAAA,SAAQM,KAAKX,EAAqBhC,EAAK,mBAFjC,QAAN,EAAAqC,SAAA,SAAQM,KDIqB,SAAC3C,GAAD,uBACvBA,EADuB,iBCJhB4C,CAAoB5C,OAMjCoC,EAAWS,OAAqC,kBAArBT,EAAWS,SAClC,QAAN,EAAAR,SAAA,SAAQM,KAAKX,EAAqB,QAAS,cAG7C,OAAQK,EAAOS,OAAgBT,EAAP,MCpBbU,EAAmB,SAACC,GAAD,MAA8B,CAC5Df,KAVgC,qBAWhCe,YAGWC,EAAqB,SAACd,GAAD,MAA2B,CAC3DF,KAdkC,uBAelCe,QAASd,EAAiBC,K,8LCjB5B,IAQee,EARDxD,IAAOC,IAAV,K,OCcEwD,EAA+B,CAC1CC,MAAO,GACPC,SAAU,IAGC3B,EAAgC,CAC3C4B,OAAQH,EACRhB,KAAMG,KAAKiB,UAAUJ,GACrBK,MAAO,MAkBMC,EAf8B,WAGvC,IAFJ7B,EAEG,uDAFKF,EAEL,yCADDO,EACC,EADDA,KAAMe,EACL,EADKA,QAER,OAAQf,GACN,IF7B8B,qBE8B5B,OAAO,2BAAKL,GAAZ,IAAmBO,KAAMa,IAC3B,IF9BgC,uBE+B9B,OAAO,2BAAKpB,GAAZ,IAAmB4B,MAAOR,IAC5B,IF/B6B,oBEgC3B,OAAO,2BAAKpB,GAAZ,IAAmB0B,OAAQN,IAE/B,OAAOpB,G,6FC1BT,IAAM8B,EAAehE,IAAOC,IAAV,KA8EHgE,EAtEe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClB9B,IAApBF,EADsC,EACtCA,MAAOC,EAD+B,EAC/BA,SAsBf,OACE,oCACGD,EAAM4B,OACL,kBAAC,EAAD,CAAOK,cAAY,SACjB,4BACGjC,EAAM4B,MAAM1D,KAAI,SAAC0D,EAAOhE,GAAR,OACf,wBAAIQ,IAAKR,GAAQgE,QAKzB,0BACEK,cAAY,cACZD,SAjCe,SAACpB,GHjBO,IAACQ,EGkB5BR,EAAEsB,iBAEGlC,EAAM4B,QACT3B,GHrB0BmB,EGqBDpB,EAAMO,KHrBwB,CAC3DF,KAH+B,oBAI/Be,QAASV,KAAKC,MAAMS,MGoBhBY,MA6BEG,QAzBc,WAClB,IAAMC,EAAU1B,KAAKiB,UAAUJ,GAC/BtB,EAASoB,EAAmBe,IAC5BnC,EAASkB,EAAiBiB,MAwBtB,kBAAC,EAAD,CACEC,KAAK,OACLJ,cAAY,OACZK,SAxBa,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,OACtBtC,EAASoB,EAAmBkB,EAAOjF,QACnC2C,EAASkB,EAAiBoB,EAAOjF,SAuB3BkF,UAAW,SAAC5B,GAEI,QAAVA,EAAExC,KACJwC,EAAEsB,kBAGNO,KAAM,GACNnF,MAAO0C,EAAMO,OAEf,6BACA,kBAACuB,EAAD,KACE,kBAAC,EAAD,CAAQzB,KAAK,QAAQqC,UAAW1C,EAAMO,KAAKW,OAAQ3B,QAAQ,SAA3D,SAEU,IACV,kBAAC,EAAD,CACEc,KAAK,SACLqC,WAAY1C,EAAM4B,QAAU5B,EAAMO,KAAKW,OACvC3B,QAAQ,WAHV,a,+pBC1EV,IAAMoD,EAAa7E,IAAOC,IAAV,KA0CV6E,EAAkB,aAoBTC,GAlBU,SAAC,GAAD,IACvBhE,EADuB,EACvBA,MACAE,EAFuB,EAEvBA,GACAsB,EAHuB,EAGvBA,KAHuB,IAIvBiC,gBAJuB,MAIZM,EAJY,EAKpBxD,EALoB,uDAOvB,kBAACuD,EAAD,KACE,kBAAC,EAAD,CACE9D,MAAOA,EACPE,GAAIA,EACJC,SAAmB,aAATqB,GAAgC,UAATA,EAAmB,QAAU,UAE9D,2CAAWjB,EAAX,CAAkBL,GAAIA,EAAIsB,KAAMA,EAAMiC,SAAUA,QC5BvCQ,GAbgB,SAAC,GAAoC,IAAlCzC,EAAiC,EAAjCA,KAAMxB,EAA2B,EAA3BA,MAA2B,IAApBkE,gBAAoB,MAAT,GAAS,EACjE,GAAI5C,EAAkB6C,SAAS3C,GAAyB,CACtD,IAAM4C,EPbkB,SAAC5C,GAC3B,OAAQA,GACN,IDV6B,SCW3B,MAAO,OACT,IDb6B,SCc3B,MAAO,SACT,IDZ8B,UCa5B,MAAO,WACT,IDb4B,QCc1B,MAAO,QACT,IDd2B,OCezB,MAAO,OACT,QACE,MAAO,QOAS6C,CAAa7C,GAC/B,OACE,kBAAC,GAAD,eAAOA,KAAM4C,EAAWpE,MAAOA,GAAYkE,IAExC,MRxBsB,SQwBlB1C,EACF,kBAAC,EAAD,eAAUxB,MAAOA,GAAYkE,IAG/B,MCXMI,GAXoB,SAAC,GAAD,IAAG3B,EAAH,EAAGA,MAAH,OACjC,oCACGA,EAAMtD,KAAI,WAAqBN,GAArB,IAAGwB,EAAH,EAAGA,MAAUgE,EAAb,gCACT,kBAAC,IAAMC,SAAP,CAAgBjF,IAAKR,GACnB,kBAAC,GAAD,iBAAiBwF,EAAjB,CAAuBL,SAAU3D,KACjC,mC,oKCRR,IAAMkE,GAAMxF,IAAOC,IAAV,MA0BMwF,GAbuB,SAAC,GAAD,IAAG9B,EAAH,EAAGA,SAAH,OACpC,kBAAC6B,GAAD,KACG7B,EAASvD,KAAI,WAAwBN,GAAxB,IAAGiB,EAAH,EAAGA,MAAH,IAAUO,aAAV,MAAkB,GAAlB,SACZ,kBAAC,IAAMiE,SAAP,CAAgBjF,IAAKR,GACnB,kBAAC,EAAD,iBAAYwB,EAAZ,CAAmBhB,IAAKR,IACrBiB,GAEH,mCCJO2E,GAhBY,WAAO,IACxBxD,EAAUE,IAAVF,MAER,IAAKA,EAAM0B,OAAQ,OAAO,KAHK,MAKI1B,EAAM0B,OAAjCT,EALuB,EAKvBA,MAAOO,EALgB,EAKhBA,MAAOC,EALS,EAKTA,SAEtB,OACE,8BACGR,GAAS,4BAAKA,GACf,kBAAC,GAAD,CAAiBO,MAAOA,IACxB,kBAAC,GAAD,CAAoBC,SAAUA,MChBvBgC,GAAiB/C,KAAKiB,UAAU,CAC3CH,MAAO,CACL,CACEnB,KAAM,SACNxB,MAAO,WACPO,MAAO,CACLL,GAAI,WACJ2E,YAAa,mBAGjB,CACErD,KAAM,SACNxB,MAAO,WACPO,MAAO,CACLiB,KAAM,WACNtB,GAAI,WACJ2E,YAAa,oBAInBjC,SAAU,CACR,CACE5C,MAAO,kBACPO,MAAO,CACLG,QAAS,UAGb,CACEV,MAAO,UACPO,MAAO,CACLG,QAAS,eAMJoE,GAAiBjD,KAAKiB,UAAU,CAC3CH,MAAO,CACL,CACEnB,KAAM,SACNxB,MAAO,QACPO,MAAO,CACLL,GAAI,QACJ2E,YAAa,cACbpG,MAAO,0BAGX,CACE+C,KAAM,SACNxB,MAAO,WACPO,MAAO,CACLL,GAAI,WACJ2E,YAAa,iBACbpG,MAAO,gBAGX,CACE+C,KAAM,SACNxB,MAAO,WACPO,MAAO,CACLiB,KAAM,WACNtB,GAAI,WACJ2E,YAAa,mBAGjB,CACErD,KAAM,SACNxB,MAAO,kBACPO,MAAO,CACLiB,KAAM,WACNtB,GAAI,iBACJ2E,YAAa,oBAGjB,CACErD,KAAM,UACNxB,MAAO,gCACPO,MAAO,CACLL,GAAI,eAIV0C,SAAU,CACR,CACE5C,MAAO,iBACPO,MAAO,CACLG,QAAS,eAMJqE,GAAqBlD,KAAKiB,UAAU,CAC/CV,MAAO,kBACPO,MAAO,CACL,CACE3C,MAAO,QACPwB,KAAM,SACNjB,MAAO,CACLL,GAAI,QACJ2E,YAAa,qBAGjB,CACE7E,MAAO,cACPwB,KAAM,OACNjB,MAAO,CACLL,GAAI,cACJ2E,YAAa,2BAGjB,CACE7E,MAAO,UACPwB,KAAM,OACNjB,MAAO,CACLL,GAAI,UACJ2E,YAAa,oBACbjB,KAAM,IAGV,CACE5D,MAAO,SACPwB,KAAM,QACNjB,MAAO,CACLL,GAAI,SACJsD,KAAM,SACNwB,SAAS,IAGb,CACEhF,MAAO,UACPwB,KAAM,QACNjB,MAAO,CACLL,GAAI,SACJsD,KAAM,YAIZZ,SAAU,CACR,CACE5C,MAAO,cACPO,MAAO,CACLG,QAAS,e,4ICvIjB,IAAM+D,GAAMxF,IAAOC,IAAV,MAuCM+F,GA/Be,WAAO,IAC3B7D,EAAaC,IAAbD,SAER,OACE,kBAAC,GAAD,kBACa,IACX,kBAAC,EAAD,CACEV,QAAQ,UACRC,KAAK,QACLf,QAAS,kBAAMwB,EAASkB,EAAiBsC,OAH3C,gBAOA,kBAAC,EAAD,CACElE,QAAQ,UACRC,KAAK,QACLf,QAAS,kBAAMwB,EAASkB,EAAiBwC,OAH3C,gBAOA,kBAAC,EAAD,CACEpE,QAAQ,UACRC,KAAK,QACLf,QAAS,kBAAMwB,EAASkB,EAAiByC,OAH3C,sB,2IC3BN,IAAMG,GAAYjG,IAAOC,IAAV,MAmCAiG,GA7BK,WAAO,IAAD,EACU5G,mBAAS,GADnB,mBACjB6G,EADiB,KACNC,EADM,KAGxB,OACE,kBAACH,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CACEjH,YAAamH,EACb9G,iBAAkB,SAACS,GAAD,OAAmBsG,EAAatG,KAElD,kBAAC,EAAD,KACE,kBAAC,EAAD,eACA,kBAAC,EAAD,gBAEF,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAYoE,SAAU,kBAAMkC,EAAa,OAE3C,kBAAC,EAAD,KACE,kBAAC,GAAD,YC3BdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAoBxE,QAASgC,EAAmB/B,aAAcA,GAC5D,kBAAC,GAAD,QAGJwE,SAASC,eAAe,W","file":"static/js/main.6ca7061a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\ninterface Props {\n  activeIndex: number;\n  setActiveIndex(index: number): void;\n}\n\nconst TabsContext = createContext<Props>({\n  activeIndex: 0,\n  setActiveIndex: () => {},\n});\n\nexport default TabsContext;\n","import React, { useState, FC } from \"react\";\nimport TabsContext from \"./TabContext\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n  activeIndex?: number;\n  onSetActiveIndex?(index: number): void;\n}\n\nconst Tabs: FC<Props> = ({\n  children,\n  activeIndex: controlledActiveIndex,\n  onSetActiveIndex,\n}) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  return (\n    <TabsContext.Provider\n      value={{\n        activeIndex: controlledActiveIndex ?? activeIndex,\n        setActiveIndex: onSetActiveIndex ?? setActiveIndex,\n      }}\n    >\n      <>{children}</>\n    </TabsContext.Provider>\n  );\n};\n\nexport default Tabs;\n","import React, { useContext, FC, ReactElement } from \"react\";\nimport TabsContext from \"./TabContext\";\n\ninterface Props {\n  children: ReactElement | ReactElement[];\n}\n\nconst TabContent: FC<Props> = ({ children }) => {\n  const { activeIndex } = useContext(TabsContext);\n\n  if (!Array.isArray(children)) {\n    return <div>{children}</div>;\n  }\n\n  return <div>{children[activeIndex]}</div>;\n};\n\nexport default TabContent;\n","import { createContext } from \"react\";\n\ninterface Props {\n  index: number;\n}\n\nconst TabListContext = createContext<Props>({ index: 0 });\n\nexport default TabListContext;\n","import React, { FC, Children } from \"react\";\nimport styled from \"styled-components\";\nimport TabListContext from \"./TabListContext\";\n\nconst TabListBlock = styled.div`\n  display: flex;\n  border-bottom: 1px solid #e5e5e5;\n  margin-bottom: 15px;\n`;\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nconst TabList: FC<Props> = ({ children }) => {\n  return (\n    <TabListBlock>\n      {Children.map(children, (child, index: number) => (\n        <TabListContext.Provider value={{ index }} key={index}>\n          {child}\n        </TabListContext.Provider>\n      ))}\n    </TabListBlock>\n  );\n};\n\nexport default TabList;\n","import React, { useContext, FC } from \"react\";\nimport styled from \"styled-components\";\nimport TabListContext from \"./TabListContext\";\nimport TabsContext from \"./TabContext\";\n\nconst TabBlock = styled.div`\n  padding: 0px 0px 10px 0px;\n  margin: 0px 30px -1px 0px;\n  cursor: pointer;\n\n  &.active {\n    color: #1890ff;\n    border-bottom: 2px solid #1890ff;\n    font-weight: 600;\n  }\n`;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Tab: FC<Props> = ({ children }) => {\n  const { activeIndex, setActiveIndex } = useContext(TabsContext);\n  const { index } = useContext(TabListContext);\n  const isActive = index === activeIndex;\n\n  return (\n    <TabBlock\n      className={isActive ? \"active\" : \"\"}\n      onClick={() => setActiveIndex(index)}\n    >\n      {children}\n    </TabBlock>\n  );\n};\n\nexport default Tab;\n","import React, { FC } from \"react\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst TabPane: FC<Props> = ({ children }) => <>{children}</>;\n\nexport default TabPane;\n","import Tabs from \"./Tabs\";\nimport TabContent from \"./TabContent\";\nimport TabList from \"./TabList\";\nimport Tab from \"./Tab\";\nimport TabPane from \"./TabPane\";\n\nexport { TabContent, TabList, Tab, TabPane };\n\nexport default Tabs;\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  border: 1px solid #e5e5e5;\n  padding: 20px;\n  border-radius: 6px;\n`;\n\nexport default Card;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: inline-block;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nexport default Label;\n","import React, { FC } from \"react\";\nimport Label from \"./Label\";\n\ntype LabelPosition = \"before\" | \"after\";\n\ninterface Props {\n  label?: string;\n  id?: string;\n  children: React.ReactElement;\n  position?: LabelPosition;\n}\n\nconst LabelWrapper: FC<Props> = ({\n  label,\n  id,\n  children,\n  position = \"before\",\n}) => (\n  <>\n    {label && position === \"before\" && <Label htmlFor={id}>{label}</Label>}\n    {children}\n    {label && position === \"after\" && <Label htmlFor={id}>{label}</Label>}\n  </>\n);\n\nexport default LabelWrapper;\n","import React, { FC, TextareaHTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\nimport LabelWrapper from \"./LabelWrapper\";\n\nconst TextAreaBlock = styled.div`\n  textarea {\n    font-family: -apple-system, BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n    border-radius: 6px;\n    padding: 7px 13px;\n    font-size: 15px;\n    outline: 0;\n    border: 1px solid #dadada;\n    color: #212529;\n    display: block;\n    line-height: 1.5;\n    width: calc(100% - 26px);\n    height: auto;\n  }\n\n  label {\n    display: inline-block;\n    font-size: 15px;\n    margin-left: 5px;\n  }\n`;\n\ninterface OwnProps {\n  label?: string;\n}\n\nexport type Props = TextareaHTMLAttributes<HTMLTextAreaElement> & OwnProps;\n\nconst TextArea: FC<Props> = ({ label, id, ...props }) => (\n  <TextAreaBlock>\n    <LabelWrapper label={label} id={id}>\n      <textarea id={id} {...props} />\n    </LabelWrapper>\n  </TextAreaBlock>\n);\n\nexport default TextArea;\n","import { FC, ButtonHTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\n\ntype Variant = \"primary\" | \"success\" | \"light\";\ntype Size = \"small\" | \"medium\";\n\ninterface OwnProps {\n  variant?: Variant;\n  size?: Size;\n}\n\nexport type Props = ButtonHTMLAttributes<HTMLButtonElement> & OwnProps;\n\nconst Button: FC<Props> = styled.button<Props>`\n  text-align: center;\n  border-radius: 6px;\n  padding: 0px 18px;\n  font-size: 15px;\n  height: 36px;\n  line-height: 36px;\n  outline: 0;\n  /* font-weight: 700; */\n  font-style: normal;\n  font-stretch: normal;\n  border: none;\n  color: #212529;\n  cursor: pointer;\n  background-color: #efefef;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: #dadada;\n  }\n\n  &:disabled {\n    opacity: 0.65;\n    cursor: not-allowed;\n  }\n\n  ${({ variant }) =>\n    variant === \"primary\" &&\n    `\n    background-color: #1890ff;\n    color: #fff;\n\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: #1777d0;\n    }\n  `}\n\n  ${({ variant }) =>\n    variant === \"success\" &&\n    `\n    background-color: #5ebd74;\n    color: #fff;\n\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: #47a05c;\n    }\n  `}\n\n  ${({ size }) =>\n    size === \"small\" &&\n    `\n  padding: 0px 9px;\n    height: 29px;\n    font-size: 14px;\n    line-height: 29px;\n`}\n\n`;\n\nButton.defaultProps = {\n  variant: \"light\",\n  size: \"medium\",\n};\n\nexport default Button;\n","import React, {\n  createContext,\n  useReducer,\n  Dispatch,\n  ReducerState,\n} from \"react\";\nimport {\n  FormConfigReducer,\n  FormConfigState,\n} from \"../reducers/formConfigReducer\";\nimport { Action } from \"../types\";\n\nexport interface ContextValue {\n  state: ReducerState<FormConfigReducer>;\n  dispatch: Dispatch<Action>;\n}\n\nexport const FormConfigContext = createContext<ContextValue | undefined>(\n  undefined\n);\n\ninterface Props {\n  reducer: FormConfigReducer;\n  initialState: FormConfigState;\n  children: React.ReactElement;\n}\n\nexport const FormConfigProvider = ({\n  reducer,\n  initialState,\n  children,\n}: Props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <FormConfigContext.Provider\n      value={{ state, dispatch }}\n      children={children}\n    />\n  );\n};\n","import { useContext } from \"react\";\nimport { FormConfigContext, ContextValue } from \"../contexts/FormConfigContext\";\n\nexport const useFormConfig = () =>\n  useContext(FormConfigContext) as ContextValue;\n","export const FIELD_TYPE_NUMBER = \"number\";\nexport const FIELD_TYPE_STRING = \"string\";\nexport const FIELD_TYPE_TEXT = \"text\";\nexport const FIELD_TYPE_BOOLEAN = \"boolean\";\nexport const FIELD_TYPE_RADIO = \"radio\";\nexport const FIELD_TYPE_DATE = \"date\";\n\nexport const FIELD_INPUT_TYPES = [\n  FIELD_TYPE_NUMBER,\n  FIELD_TYPE_BOOLEAN,\n  FIELD_TYPE_STRING,\n  FIELD_TYPE_RADIO,\n  FIELD_TYPE_DATE,\n] as const;\n\nexport const FIELD_TYPES = [...FIELD_INPUT_TYPES, FIELD_TYPE_TEXT] as const;\n","import { FieldType } from \"./types\";\nimport {\n  FIELD_TYPE_STRING,\n  FIELD_TYPE_NUMBER,\n  FIELD_TYPE_BOOLEAN,\n  FIELD_TYPE_RADIO,\n  FIELD_TYPE_DATE,\n} from \"./constants\";\n\nexport const getInputType = (type: FieldType): string => {\n  switch (type) {\n    case FIELD_TYPE_STRING:\n      return \"text\";\n    case FIELD_TYPE_NUMBER:\n      return \"number\";\n    case FIELD_TYPE_BOOLEAN:\n      return \"checkbox\";\n    case FIELD_TYPE_RADIO:\n      return \"radio\";\n    case FIELD_TYPE_DATE:\n      return \"date\";\n    default:\n      return \"text\";\n  }\n};\n\nexport const getRequiredFieldMsg = (key: string) =>\n  `Field '${key}' is required`;\nexport const getFieldWrongTypeMsg = (key: string, type: string) =>\n  `Field '${key}' must be ${type}`;\n","import { getRequiredFieldMsg, getFieldWrongTypeMsg } from \"./helpers\";\nimport { FormsConfigData } from \"./types\";\n\nexport const validateFormData = (data: string): string[] | null => {\n  let configData: FormsConfigData | Pick<FormsConfigData, \"title\"> = {};\n  let errors: string[] | null = null;\n\n  try {\n    configData = JSON.parse(data);\n  } catch (e) {\n    errors = [\"Invalid JSON data\"];\n  }\n\n  if (errors !== null) {\n    return errors;\n  }\n\n  errors = [];\n  const keys = [\"items\", \"controls\"];\n\n  keys.forEach((key: string) => {\n    if (!configData.hasOwnProperty(key)) {\n      errors?.push(getRequiredFieldMsg(key));\n    } else if (!Array.isArray((configData as any)[key])) {\n      errors?.push(getFieldWrongTypeMsg(key, \"an array\"));\n    }\n  });\n\n  if (configData.title && typeof configData.title !== \"string\") {\n    errors?.push(getFieldWrongTypeMsg(\"title\", \"a string\"));\n  }\n\n  return !errors.length ? null : errors;\n};\n","import { Action } from \"../types\";\nimport { validateFormData } from \"../utils\";\n\nexport const UPDATE_FORM_CONFIG = \"UPDATE_FORM_CONFIG\";\nexport const VALIDATE_FORM_CONFIG = \"VALIDATE_FORM_CONFIG\";\nexport const APPLY_FORM_CONFIG = \"APPLY_FORM_CONFIG\";\n\nexport const applyFormConfig = (payload: string): Action => ({\n  type: APPLY_FORM_CONFIG,\n  payload: JSON.parse(payload),\n});\n\nexport const updateFormConfig = (payload: string): Action => ({\n  type: UPDATE_FORM_CONFIG,\n  payload,\n});\n\nexport const validateFormConfig = (data: string): Action => ({\n  type: VALIDATE_FORM_CONFIG,\n  payload: validateFormData(data),\n});\n","import styled from \"styled-components\";\n\nconst Alert = styled.div`\n  padding: 12px 20px;\n  margin-bottom: 1rem;\n  border-radius: 6px;\n  color: #731820;\n  background-color: #f8d7da;\n`;\n\nexport default Alert;\n","import { Reducer } from \"react\";\nimport { FormsConfigData, Action } from \"../types\";\nimport {\n  UPDATE_FORM_CONFIG,\n  VALIDATE_FORM_CONFIG,\n  APPLY_FORM_CONFIG,\n} from \"../actions/formConfigActions\";\n\nexport interface FormConfigState {\n  data: string;\n  config: FormsConfigData | null;\n  error: string[] | null;\n}\n\nexport type FormConfigReducer = Reducer<FormConfigState, Action>;\n\nexport const initialData: FormsConfigData = {\n  items: [],\n  controls: [],\n};\n\nexport const initialState: FormConfigState = {\n  config: initialData,\n  data: JSON.stringify(initialData),\n  error: null,\n};\n\nconst formConfigReducer: FormConfigReducer = (\n  state = initialState,\n  { type, payload }\n) => {\n  switch (type) {\n    case UPDATE_FORM_CONFIG:\n      return { ...state, data: payload };\n    case VALIDATE_FORM_CONFIG:\n      return { ...state, error: payload };\n    case APPLY_FORM_CONFIG:\n      return { ...state, config: payload };\n  }\n  return state;\n};\n\nexport default formConfigReducer;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport TextArea from \"./TextArea\";\nimport Button from \"./Button\";\nimport { useFormConfig } from \"../hooks/useFormConfig\";\nimport {\n  updateFormConfig,\n  validateFormConfig,\n  applyFormConfig,\n} from \"../actions/formConfigActions\";\nimport Alert from \"./Alert\";\nimport { initialData } from \"../reducers/formConfigReducer\";\n\nconst ContentRight = styled.div`\n  text-align: right;\n`;\n\ninterface Props {\n  onSubmit(): void;\n}\n\nconst ConfigForm: FC<Props> = ({ onSubmit }) => {\n  const { state, dispatch } = useFormConfig();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!state.error) {\n      dispatch(applyFormConfig(state.data));\n      onSubmit();\n    }\n  };\n\n  const handleReset = () => {\n    const newData = JSON.stringify(initialData);\n    dispatch(validateFormConfig(newData));\n    dispatch(updateFormConfig(newData));\n  };\n\n  const handleChange = ({ target }: React.ChangeEvent<HTMLTextAreaElement>) => {\n    dispatch(validateFormConfig(target.value));\n    dispatch(updateFormConfig(target.value));\n  };\n\n  return (\n    <>\n      {state.error && (\n        <Alert data-testid=\"error\">\n          <ul>\n            {state.error.map((error, index) => (\n              <li key={index}>{error}</li>\n            ))}\n          </ul>\n        </Alert>\n      )}\n      <form\n        data-testid=\"form-config\"\n        onSubmit={handleSubmit}\n        onReset={handleReset}\n      >\n        <TextArea\n          name=\"data\"\n          data-testid=\"data\"\n          onChange={handleChange}\n          onKeyDown={(e) => {\n            // just for disabling focus on next form element\n            if (e.key === \"Tab\") {\n              e.preventDefault();\n            }\n          }}\n          rows={10}\n          value={state.data}\n        />\n        <br />\n        <ContentRight>\n          <Button type=\"reset\" disabled={!state.data.length} variant=\"light\">\n            Clear\n          </Button>{\" \"}\n          <Button\n            type=\"submit\"\n            disabled={!!state.error || !state.data.length}\n            variant=\"primary\"\n          >\n            Apply\n          </Button>\n        </ContentRight>\n      </form>\n    </>\n  );\n};\n\nexport default ConfigForm;\n","import React, { FC, InputHTMLAttributes, FormEvent } from \"react\";\nimport styled from \"styled-components\";\nimport LabelWrapper from \"./LabelWrapper\";\n\nconst FieldBlock = styled.div`\n  input[type=\"date\"] {\n    font-family: -apple-system, BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n  }\n\n  input:not([type=\"checkbox\"]):not([type=\"radio\"]) {\n    border-radius: 6px;\n    width: calc(100% - 32px);\n    padding: 0px 16px;\n    font-size: 15px;\n    height: 34px;\n    line-height: 36px;\n    outline: 0;\n    border: 1px solid #dadada;\n    color: #212529;\n    display: block;\n\n    &[type=\"number\"] {\n      width: calc(100% - 16px);\n      padding: 0px 0px 0px 16px;\n    }\n  }\n\n  label {\n    display: inline-block;\n    font-size: 15px;\n    margin-left: 5px;\n  }\n`;\n\ninterface OwnProps {\n  label?: string;\n  onChange?(e: FormEvent<HTMLInputElement>): void;\n}\n\nexport type Props = InputHTMLAttributes<HTMLInputElement> & OwnProps;\n\n/*\n  actually we don't need that prop\n  but if we don't put any handler for checkbox input\n  we'll get warning: You provided a 'checked' prop to a form field w/o an `onChange` \n*/\nconst defaultOnChange = () => {};\n\nconst Field: FC<Props> = ({\n  label,\n  id,\n  type,\n  onChange = defaultOnChange,\n  ...props\n}) => (\n  <FieldBlock>\n    <LabelWrapper\n      label={label}\n      id={id}\n      position={type === \"checkbox\" || type === \"radio\" ? \"after\" : \"before\"}\n    >\n      <input {...props} id={id} type={type} onChange={onChange} />\n    </LabelWrapper>\n  </FieldBlock>\n);\n\nexport default Field;\n","import React, { FC } from \"react\";\nimport {\n  FieldType,\n  FieldTextAreaProps,\n  InputProps,\n  TextareaProps,\n} from \"../types\";\nimport Field from \"./Field\";\nimport TextArea from \"./TextArea\";\nimport { FIELD_TYPE_TEXT, FIELD_INPUT_TYPES } from \"../constants\";\nimport { getInputType } from \"../helpers\";\n\ntype FieldInputType = typeof FIELD_INPUT_TYPES[number];\n\ninterface Props {\n  type: FieldType;\n  label?: string;\n  tagProps?: FieldTextAreaProps;\n}\n\nconst CommonField: FC<Props> = ({ type, label, tagProps = {} }) => {\n  if (FIELD_INPUT_TYPES.includes(type as FieldInputType)) {\n    const inputType = getInputType(type);\n    return (\n      <Field type={inputType} label={label} {...(tagProps as InputProps)} />\n    );\n  } else if (type === FIELD_TYPE_TEXT) {\n    return <TextArea label={label} {...(tagProps as TextareaProps)} />;\n  }\n\n  return null;\n};\n\nexport default CommonField;\n","import React, { FC } from \"react\";\nimport { FormsConfigItem } from \"../types\";\nimport CommonField from \"./CommonField\";\n\ninterface Props {\n  items: FormsConfigItem[];\n}\n\nconst FormItemsViewer: FC<Props> = ({ items }) => (\n  <>\n    {items.map(({ props, ...item }, index) => (\n      <React.Fragment key={index}>\n        <CommonField {...item} tagProps={props} />\n        <br />\n      </React.Fragment>\n    ))}\n  </>\n);\n\nexport default FormItemsViewer;\n","import React, { FC } from \"react\";\nimport { FormsConfigControl } from \"../types\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  button {\n    margin-left: 10px;\n  }\n`;\n\ninterface Props {\n  controls: FormsConfigControl[];\n}\n\nconst FormControlsViewer: FC<Props> = ({ controls }) => (\n  <Row>\n    {controls.map(({ label, props = {} }, index) => (\n      <React.Fragment key={index}>\n        <Button {...props} key={index}>\n          {label}\n        </Button>\n        <br />\n      </React.Fragment>\n    ))}\n  </Row>\n);\n\nexport default FormControlsViewer;\n","import React, { FC } from \"react\";\nimport FormItemsViewer from \"./FormItemsViewer\";\nimport FormControlsViewer from \"./FormControlsViewer\";\nimport { useFormConfig } from \"../hooks/useFormConfig\";\n\nconst ResultForm: FC<{}> = () => {\n  const { state } = useFormConfig();\n\n  if (!state.config) return null;\n\n  const { title, items, controls } = state.config;\n\n  return (\n    <form>\n      {title && <h1>{title}</h1>}\n      <FormItemsViewer items={items} />\n      <FormControlsViewer controls={controls} />\n    </form>\n  );\n};\n\nexport default ResultForm;\n","export const signInFormData = JSON.stringify({\n  items: [\n    {\n      type: \"string\",\n      label: \"Username\",\n      props: {\n        id: \"username\",\n        placeholder: \"Enter username\",\n      },\n    },\n    {\n      type: \"string\",\n      label: \"Password\",\n      props: {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter password\",\n      },\n    },\n  ],\n  controls: [\n    {\n      label: \"Forgot password\",\n      props: {\n        variant: \"light\",\n      },\n    },\n    {\n      label: \"Sign In\",\n      props: {\n        variant: \"primary\",\n      },\n    },\n  ],\n});\n\nexport const signUpFormData = JSON.stringify({\n  items: [\n    {\n      type: \"string\",\n      label: \"Email\",\n      props: {\n        id: \"email\",\n        placeholder: \"Enter email\",\n        value: \"somenewuser@gmail.com\",\n      },\n    },\n    {\n      type: \"string\",\n      label: \"Username\",\n      props: {\n        id: \"username\",\n        placeholder: \"Enter username\",\n        value: \"somenewuser\",\n      },\n    },\n    {\n      type: \"string\",\n      label: \"Password\",\n      props: {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter password\",\n      },\n    },\n    {\n      type: \"string\",\n      label: \"Repeat password\",\n      props: {\n        type: \"password\",\n        id: \"repeatPassword\",\n        placeholder: \"Repeat password\",\n      },\n    },\n    {\n      type: \"boolean\",\n      label: \"I accept the Terms of Service\",\n      props: {\n        id: \"agreement\",\n      },\n    },\n  ],\n  controls: [\n    {\n      label: \"Create account\",\n      props: {\n        variant: \"primary\",\n      },\n    },\n  ],\n});\n\nexport const createPostFormData = JSON.stringify({\n  title: \"Create new post\",\n  items: [\n    {\n      label: \"Title\",\n      type: \"string\",\n      props: {\n        id: \"title\",\n        placeholder: \"Enter post title\",\n      },\n    },\n    {\n      label: \"Description\",\n      type: \"text\",\n      props: {\n        id: \"description\",\n        placeholder: \"Enter post description\",\n      },\n    },\n    {\n      label: \"Content\",\n      type: \"text\",\n      props: {\n        id: \"content\",\n        placeholder: \"Enter post contet\",\n        rows: 5,\n      },\n    },\n    {\n      label: \"Public\",\n      type: \"radio\",\n      props: {\n        id: \"access\",\n        name: \"access\",\n        checked: true,\n      },\n    },\n    {\n      label: \"Private\",\n      type: \"radio\",\n      props: {\n        id: \"access\",\n        name: \"access\",\n      },\n    },\n  ],\n  controls: [\n    {\n      label: \"Create post\",\n      props: {\n        variant: \"primary\",\n      },\n    },\n  ],\n});\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport { useFormConfig } from \"../hooks/useFormConfig\";\nimport { updateFormConfig } from \"../actions/formConfigActions\";\nimport { signInFormData, signUpFormData, createPostFormData } from \"../data\";\n\nconst Row = styled.div`\n  margin-bottom: 15px;\n\n  button {\n    margin-left: 10px;\n  }\n`;\n\nconst FormTemplates: FC<{}> = () => {\n  const { dispatch } = useFormConfig();\n\n  return (\n    <Row>\n      Templates:{\" \"}\n      <Button\n        variant=\"success\"\n        size=\"small\"\n        onClick={() => dispatch(updateFormConfig(signInFormData))}\n      >\n        Sign In Form\n      </Button>\n      <Button\n        variant=\"success\"\n        size=\"small\"\n        onClick={() => dispatch(updateFormConfig(signUpFormData))}\n      >\n        Sign Up Form\n      </Button>\n      <Button\n        variant=\"success\"\n        size=\"small\"\n        onClick={() => dispatch(updateFormConfig(createPostFormData))}\n      >\n        Create Post Form\n      </Button>\n    </Row>\n  );\n};\n\nexport default FormTemplates;\n","import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Tabs, { Tab, TabPane, TabList, TabContent } from \"./Tabs\";\nimport Card from \"./Card\";\nimport ConfigForm from \"./ConfigForm\";\nimport ResultForm from \"./ResultForm\";\nimport FormTemplates from \"./FormTemplates\";\n\nconst Container = styled.div`\n  max-width: 800px;\n  width: 100%;\n  margin: 25px auto 0 auto;\n`;\n\nconst App: FC<{}> = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  return (\n    <Container>\n      <Card>\n        <FormTemplates />\n        <Tabs\n          activeIndex={activeTab}\n          onSetActiveIndex={(index: number) => setActiveTab(index)}\n        >\n          <TabList>\n            <Tab>Config</Tab>\n            <Tab>Result</Tab>\n          </TabList>\n          <TabContent>\n            <TabPane>\n              <ConfigForm onSubmit={() => setActiveTab(1)} />\n            </TabPane>\n            <TabPane>\n              <ResultForm />\n            </TabPane>\n          </TabContent>\n        </Tabs>\n      </Card>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { FormConfigProvider } from \"./contexts/FormConfigContext\";\nimport formConfigReducer, { initialState } from \"./reducers/formConfigReducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FormConfigProvider reducer={formConfigReducer} initialState={initialState}>\n      <App />\n    </FormConfigProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}